AWSTemplateFormatVersion: '2010-09-09'
# *** Change this to something useful for you!!
Description: github-codepipelinev2
Parameters:
  TargetS3Bucket:
    Type: String
    Default: dev.cicd-demo
  GitHubOAuthToken:
    Type: String
    Default: "a97e1a11e986681b5195380051cf99f1e6e71aee"
    NoEcho: true
    MinLength: 40
    MaxLength: 40
    AllowedPattern: '[a-z0-9]*'
  # *** The remaining parameters should either be:
  # - overridden via changing "Default" here (PREFERABLE, since then they're in source control)
  # - or you can pass them in when creating / updating the stack
  # *** The owner of the Github repo for this application.
  GitHubOwner:
    Type: String
    Default: tmadiya
  ProjectID:
    Type: String
    Default: 12345
  DestinationLambdaAlias:
    Type: String
    Default: defaultalias
  DestinationLambdaARN:
    Type: String
    Default: "arn:aws:lambda:ap-south-1:040087672732:function:CICD-Lambda-Dev"
  DestinationLambdaTestARN:
    Type: String
    Default: "arn:aws:lambda:ap-south-1:040087672732:function:CICD-Lambda-Test"
  SrcFolderPathBuildSpecFile:
    Type: String
    Default: buildspec.yml
  BuildSpecFileFrontEnd:
    Type: String
    Default: buildspecfrontend.yml
  GitHubRepo:
    Type: String
    Default: cloud-cicd
    AllowedPattern: "[A-Za-z0-9-]+"
  GitHubBranch:
    Type: String
    Default: "Dev"
    AllowedPattern: "[A-Za-z0-9-]+"
  GitHubBranchTest:
    Type: String
    Default: "Test"
    AllowedPattern: "[A-Za-z0-9-]+"
  # *** The stack name for the actual application we're deploying
  ApplicationStackName:
    Type: String
    Default: github-codepipeline-startkit-v1
    AllowedPattern: "[A-Za-z0-9-]+"
Resources:
  PipelineArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration: 
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
  CodePipelineFrontEnd:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactsBucket
      RestartExecutionOnUpdate: true
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
      - Name: FrontEndSourceDev
        Actions:
        - Name: Source
          InputArtifacts: []
          ActionTypeId:
            Category: Source
            Owner: ThirdParty
            Version: 1
            Provider: GitHub
          OutputArtifacts:
          - Name: SourceCodeFrontEnd
          Configuration:
            Owner: !Ref GitHubOwner
            Repo: !Ref GitHubRepo
            Branch: !Ref GitHubBranch
            # PollForSourceChanges: false
            OAuthToken: !Ref GitHubOAuthToken
          RunOrder: 1
      - Name: BuildFrontEndDev
        Actions:
        - Name: BuildFrontEndCode
          ActionTypeId:
            Category: Build
            Owner: AWS
            Provider: CodeBuild
            Version: '1'
          RunOrder: 2
          Configuration:
            ProjectName:
              Ref: CodeBuildProjectFrontEnd
          OutputArtifacts:
          - Name: builded
          InputArtifacts:
          - Name: SourceCodeFrontEnd
      - Name: FrontEnd_Approval_For_Test_Deployment
        Actions:
        - Name: Approval
          ActionTypeId:
            Category: Approval
            Owner: AWS
            Version: '1'
            Provider: Manual
          Configuration:
            NotificationArn: arn:aws:sns:ap-south-1:040087672732:starterkit-1
            #ExternalEntityLink: http://example.com
            CustomData: The latest changes include feedback on Starter-Kit..
          RunOrder: 4
      - Name: Deploy
        Actions:
          - Name: DeployInfra
            RunOrder: 1
            InputArtifacts:
              - Name: SourceCodeFrontEnd
            ActionTypeId:
              Category: Deploy
              Owner: AWS
              Version: 1
              Provider: CloudFormation
            Configuration:
              ActionMode: REPLACE_ON_FAILURE #CREATE_UPDATE 
              RoleArn: !Sub "${CloudformationRole.Arn}"
              Capabilities: CAPABILITY_NAMED_IAM
              StackName: !Sub "${AWS::StackName}-FrontEnd-Test"
              TemplatePath: SourceCodeFrontEnd::TestInfraFrontEnd.yml
  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactsBucket
      RestartExecutionOnUpdate: true
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
      - Name: Checkout-Env-Dev-Source
        Actions:
        - Name: Source
          InputArtifacts: []
          ActionTypeId:
            Category: Source
            Owner: ThirdParty
            Version: 1
            Provider: GitHub
          OutputArtifacts:
          - Name: SourceCode
          Configuration:
            Owner: !Ref GitHubOwner
            Repo: !Ref GitHubRepo
            Branch: !Ref GitHubBranch
            # PollForSourceChanges: false
            OAuthToken: !Ref GitHubOAuthToken
          RunOrder: 1
       #Approval
      - Name: Approval_For_Dev_Deployment
        Actions:
        - Name: Approval
          ActionTypeId:
            Category: Approval
            Owner: AWS
            Version: '1'
            Provider: Manual
          Configuration:
            NotificationArn: arn:aws:sns:ap-south-1:040087672732:starterkit-1
            #ExternalEntityLink: http://example.com
            CustomData: The latest changes include feedback on Starter-Kit.
          RunOrder: 2
      - Name: BuildLambdaCodeDev
        Actions:
        - Name: BuildDeployLambda
          ActionTypeId:
            Category: Build
            Owner: AWS
            Provider: CodeBuild
            Version: '1'
          RunOrder: 3
          Configuration:
            ProjectName:
              Ref: CodeBuildProject
          OutputArtifacts:
          - Name: buildingcode
          InputArtifacts:
          - Name: SourceCode
        #Approval
      - Name: Approval
        Actions:
        - Name: Approval
          ActionTypeId:
            Category: Approval
            Owner: AWS
            Version: '1'
            Provider: Manual
          Configuration:
            NotificationArn: arn:aws:sns:ap-south-1:040087672732:starterkit-1
            #ExternalEntityLink: http://example.com
            CustomData: The latest changes include feedback on Starter-Kit.
          RunOrder: 4
      - Name: Deploy
        Actions:
          - Name: DeployInfra
            RunOrder: 1
            InputArtifacts:
              - Name: SourceCode
            ActionTypeId:
              Category: Deploy
              Owner: AWS
              Version: 1
              Provider: CloudFormation
            Configuration:
              ActionMode: REPLACE_ON_FAILURE #CREATE_UPDATE 
              RoleArn: !Sub "${CloudformationRole.Arn}"
              Capabilities: CAPABILITY_NAMED_IAM
              StackName: !Sub "${AWS::StackName}-Test"
              TemplatePath: SourceCode::TestInfra.yml
              # TemplateConfiguration: TestInfra.yml
  CodeBuildProjectFrontEnd:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        EncryptionDisabled: false
        Location: !Ref PipelineArtifactsBucket
        Name: SampleNodeBuild
        NamespaceType: BUILD_ID
        OverrideArtifactName: true
        Packaging: NONE
        Path: SampleJavaBuild/JavaSample
        Type: S3
      ServiceRole: 'arn:aws:iam::040087672732:role/test-role-vishnu'
      Description: This is code build used to build Node JS
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "aws/codebuild/standard:3.0"
        Type: LINUX_CONTAINER
        EnvironmentVariables:
        - Name: TargetS3Bucket
          Value:
            Ref: TargetS3Bucket
        - Name: DestinationLambdaAlias
          Value:
            Ref: DestinationLambdaAlias
      Name: "byop-build-FronEnd-Dev"
      LogsConfig:
        S3Logs:
          Status: ENABLED
          Location: continuousintegration-dev/SampleJavaBuild/Logs
      Source:
        BuildSpec:
          Ref: BuildSpecFileFrontEnd
        Location: continuousintegration-dev/LambdaDeployment/CodeBuildNodeSample.zip
        Type: S3            
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        EncryptionDisabled: false
        Location: !Ref PipelineArtifactsBucket
        Name: SampleNodeBuild
        NamespaceType: BUILD_ID
        OverrideArtifactName: true
        Packaging: NONE
        Path: SampleJavaBuild/JavaSample
        Type: S3
      ServiceRole: 'arn:aws:iam::040087672732:role/test-role-vishnu'
      Description: This is code build used to build Node JS
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "aws/codebuild/standard:3.0"
        Type: LINUX_CONTAINER
        EnvironmentVariables:
        - Name: DestinationLambdaARN
          Value:
            Ref: DestinationLambdaARN
        - Name: DestinationLambdaAlias
          Value:
            Ref: DestinationLambdaAlias
      Name: "byop-NodeJS-build-codebuild"
      LogsConfig:
        S3Logs:
          Status: ENABLED
          Location: continuousintegration-dev/SampleJavaBuild/Logs
      Source:
        BuildSpec:
          Ref: SrcFolderPathBuildSpecFile
        Location: continuousintegration-dev/LambdaDeployment/CodeBuildNodeSample.zip
        Type: S3
    # 'GithubWebhook' satisfies two requirements:
  # -- Means that updates are pushed from GitHub, rather than AWS having to poll
  # -- Means we can filter for required changes
  GithubWebhook:
    Type: 'AWS::CodePipeline::Webhook'
    Properties:
      Authentication: GITHUB_HMAC
      # Authentication: UNAUTHENTICATED
      AuthenticationConfiguration:
        SecretToken: !Ref GitHubOAuthToken
      RegisterWithThirdParty: 'true'
      Filters:
      - JsonPath: "$.ref"
        MatchEquals: refs/heads/{Branch}
      TargetPipeline: !Ref CodePipeline
      TargetAction: Source
      TargetPipelineVersion: !GetAtt CodePipeline.Version
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess #TODO: Reduce permissions
  CloudformationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: cloudformation.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess #TODO: Reduce permissions